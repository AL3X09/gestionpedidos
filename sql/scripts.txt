CREATE TABLE `gestionproductos`.`pedido` (
  `idpedido` INT NOT NULL AUTO_INCREMENT,
  `consecutivo` INT NOT NULL,
  `fkUsuario` INT NOT NULL,
  `fkProducto` INT NOT NULL,
  `unidades_vendidas` INT NULL,
  `fkFormaPago` INT NULL,
  `fkTipoPago` INT NULL,
  `totalPagado` BIGINT(20) NULL,
  `diferidoAPagar` BIGINT(20) NULL,
  `numeroPedido` BIGINT(50) NULL,
  `flEstado` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`idpedido`))
COMMENT = 'mantiene los datos del pedido';
///
USE `gestionproductos`;
DROP procedure IF EXISTS `insertPago`;

DELIMITER $$
USE `gestionproductos`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insertPago` (IN `consecutivo` INT,IN `fkusuario` INT,IN `fkProducto` INT,IN `unidades_vendidas` INT,IN `fkFormaPago` INT,IN `fkTipoPago` INT,IN `totalPagado` INT,IN `diferidoAPagar` INT,IN `numeroPedido` INT )
BEGIN
INSERT INTO pago
VALUES(NULL,`consecutivo`,`fkusuario`,`fkProducto`,`unidades_vendidas`,`fkFormaPago`,`fkTipoPago`,`totalPagado`,`diferidoAPagar`,`numeroPedido`,1);
END$$

DELIMITER ;

/////
DROP PROCEDURE `insertPago`; CREATE DEFINER=`root`@`localhost` PROCEDURE `insertPedido`(IN `consecutivo` INT, IN `fkusuario` INT, IN `fkProducto` INT, IN `unidades_vendidas` INT, IN `fkFormaPago` INT, IN `fkTipoPago` INT, IN `totalPagado` INT, IN `diferidoAPagar` INT, IN `numeroPedido` INT) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER BEGIN INSERT INTO pedido VALUES(consecutivo,fkusuario,fkProducto,unidades_vendidas,fkFormaPago,fkTipoPago,totalPagado,diferidoAPagar,numeroPedido,1); END 
////
DROP PROCEDURE `insertPedido`; CREATE DEFINER=`root`@`localhost` PROCEDURE `SPinsertPedido`(IN `consecutivo` INT, IN `fkusuario` INT, IN `fkProducto` INT, IN `unidades_vendidas` INT, IN `fkFormaPago` INT, IN `fkTipoPago` INT, IN `totalPagado` INT, IN `diferidoAPagar` INT, IN `numeroPedido` INT) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER BEGIN INSERT INTO pedido VALUES(consecutivo,fkusuario,fkProducto,unidades_vendidas,fkFormaPago,fkTipoPago,totalPagado,diferidoAPagar,numeroPedido,1); END 
////
DROP PROCEDURE `SPinsertPedido`; CREATE DEFINER=`root`@`localhost` PROCEDURE `SPinsertPedido`(IN `consecutivo` INT, IN `fkusuario` INT, IN `fkProducto` INT, IN `unidades_vendidas` INT, IN `fkFormaPago` INT, IN `fkTipoPago` INT, IN `totalPagado` INT, IN `diferidoAPagar` INT, IN `numeroPedido` INT) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER BEGIN INSERT INTO pedido VALUES(NULL, consecutivo, fkusuario, fkProducto, unidades_vendidas, fkFormaPago, fkTipoPago, totalPagado, diferidoAPagar, numeroPedido, 1); END 
////
CREATE TABLE `gestionproductos`.`usuario_has_cuenta_pedido` ( `idUsuariCuentaPedido` INT NOT NULL AUTO_INCREMENT , `fkUsuario` INT NOT NULL , `fkProducto` INT NOT NULL , `numerocuenta` BIGINT(20) NULL , `flEstado` INT NOT NULL , PRIMARY KEY (`idUsuariCuentaPedido`)) ENGINE = InnoDB COMMENT = 'tabala mantiene datos de pedido del usario y el pedido';
////
CREATE PROCEDURE `SPinsert_usuario_has_cuenta_pedido`(IN `fkusuario` INT, IN `fkprodcuto` INT, IN `numcuenta` INT) NOT DETERMINISTIC NO SQL SQL SECURITY DEFINER INSERT INTO usuario_has_cuenta_pedido VALUES(NULL,fkusuario,fkprodcuto,numcuenta,1)
////
ALTER TABLE `usuario_has_cuenta_pedido` CHANGE `fkProducto` `fkPedido` INT(11) NOT NULL;
////
DROP PROCEDURE `SPinsert_usuario_has_cuenta_pedido`; CREATE DEFINER=`root`@`localhost` PROCEDURE `SPinsert_usuario_has_cuenta_pedido`(IN `fkusuario` INT, IN `fkpedido` INT, IN `numcuenta` INT) NOT DETERMINISTIC NO SQL SQL SECURITY DEFINER INSERT INTO usuario_has_cuenta_pedido VALUES(NULL,fkusuario,fkpedido,numcuenta,1)